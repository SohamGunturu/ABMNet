Epoch: 0  Loss: 5786.295620101739
Epoch: 1  Loss: 5643.600233660547
Traceback (most recent call last):
  File "/gpfs0/home1/gddaslab/rsjxw007/ABMNet/spatial_train.py", line 80, in <module>
    out = model(data.initial_graph.to(device), data.edges.to(device), rates.to(device))
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/gpfs0/home1/gddaslab/rsjxw007/ABMNet/modules/models/spatial.py", line 70, in forward
    graph = self.conv1(graph, edge_index)
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 232, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/nn/conv/message_passing.py", line 484, in propagate
    out = self.aggregate(out, **aggr_kwargs)
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/nn/conv/message_passing.py", line 608, in aggregate
    return self.aggr_module(inputs, index, ptr=ptr, dim_size=dim_size,
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/nn/aggr/base.py", line 116, in __call__
    raise e
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/nn/aggr/base.py", line 109, in __call__
    return super().__call__(x, index, ptr, dim_size, dim, **kwargs)
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/nn/aggr/basic.py", line 21, in forward
    return self.reduce(x, index, ptr, dim_size, dim, reduce='sum')
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/nn/aggr/base.py", line 155, in reduce
    return scatter(x, index, dim, dim_size, reduce)
  File "/home/gddaslab/rsjxw007/.local/lib/python3.10/site-packages/torch_geometric/utils/scatter.py", line 74, in scatter
    return src.new_zeros(size).scatter_add_(dim, index, src)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 39.44 GiB total capacity; 37.31 GiB already allocated; 5.88 MiB free; 38.24 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
Job Statistics for 3756320:
           JobID       User               Start                 End    Elapsed     MaxRSS   TotalCPU      State Exit        NodeList                                  ReqTRES 
---------------- ---------- ------------------- ------------------- ---------- ---------- ---------- ---------- ---- --------------- ---------------------------------------- 
         3756320   rsjxw007 2023-05-26T10:29:18 2023-05-26T10:34:56   00:05:38             06:27.535     FAILED  1:0   r1pl-hpcf-g03 billing=16,cpu=16,gres/gpu=1,mem=677360+ 
   3756320.batch            2023-05-26T10:29:18 2023-05-26T10:34:56   00:05:38  57195.65M  06:27.532     FAILED  1:0   r1pl-hpcf-g03                                          
  3756320.extern            2023-05-26T10:29:18 2023-05-26T10:34:56   00:05:38      0.10M  00:00.003  COMPLETED  0:0   r1pl-hpcf-g03                                          
CPU Efficiency: 7.17% of 01:30:08 core-walltime
